package ReflectionAndAnnotations.GettersAndSetters_lab2;

import java.lang.reflect.Method;

import java.util.*;

public class Main {
    public static void main(String[] args) {

        Class<Reflection> reflection = Reflection.class;
        Method[] declaredMethods = reflection.getDeclaredMethods();

        List<Method> getters = new ArrayList<>();
        List<Method> setters = new ArrayList<>();

        for (Method method : declaredMethods) {
            if (method.getName().startsWith("get")) {
                getters.add(method);
            } else if (method.getName().startsWith("set")) {
                setters.add(method);
            }
        }

        getters
                .stream()
                .sorted(Comparator.comparing(Method::getName))
                .forEach(g -> System.out.printf("%s will return class %s%n",
                        g.getName(), g.getReturnType().getName()));
        setters
                .stream()
                .sorted(Comparator.comparing(Method::getName))
                .forEach(s -> System.out.printf("%s and will set field of class %s%n",
                        s.getName(), s.getParameterTypes()[0].getName()));
    }
}
