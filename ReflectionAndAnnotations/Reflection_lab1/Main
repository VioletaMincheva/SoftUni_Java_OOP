package ReflectionAndAnnotations.Reflection_lab1;

import java.lang.reflect.InvocationTargetException;

public class Main {
    public static void main(String[] args) {

        Class reflection = Reflection.class;
        System.out.println(reflection);
        Class superclass = reflection.getSuperclass();
        System.out.println(superclass);
        Class[] interfaces = reflection.getInterfaces();
        for (Class anInterface : interfaces) {
            System.out.println(anInterface);
        }

        try {
            Object reflectionObject = reflection.getDeclaredConstructor().newInstance();
            System.out.println(reflectionObject);
        } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
            e.printStackTrace();
        }

    }
}
