package ReflectionAndAnnotations.BlackBoxInteger_ex2;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws NoSuchMethodException,
            InvocationTargetException, InstantiationException, IllegalAccessException, NoSuchFieldException {

        Scanner scanner = new Scanner(System.in);

        BlackBoxInt blackBoxInt;
        Constructor<BlackBoxInt> constructor = BlackBoxInt.class.getDeclaredConstructor(int.class);
        constructor.setAccessible(true);
        blackBoxInt = constructor.newInstance(0);


        String line = scanner.nextLine();
        while (!line.equals("END")) {
            String[] tokens = line.split("_");
            String methodName = tokens[0];
            int parameter = Integer.parseInt(tokens[1]);

            Method method = BlackBoxInt.class.getDeclaredMethod(methodName, int.class);
            method.setAccessible(true);
            method.invoke(blackBoxInt,parameter);

            Field innerValue = BlackBoxInt.class.getDeclaredField("innerValue");
            innerValue.setAccessible(true);
            System.out.println(innerValue.get(blackBoxInt));

            line = scanner.nextLine();
        }
    }
}
