package p01_Database_tets;

import org.junit.*;
import p01_Database.Database;

import javax.naming.OperationNotSupportedException;

import static org.junit.jupiter.api.Assertions.*;

public class DatabaseTest {

    private Database database;
    private static final Integer[] ELEMENTS = new Integer[]{1, 2, 3, 4, 5};

    @Before
    public void setUp() throws OperationNotSupportedException {
        database = new Database(ELEMENTS);
    }

    @Test
    public void testDatabaseConstructorShouldCreateObjectWithValidState() {
        assertArrayEquals(ELEMENTS, database.getElements());
        assertEquals(ELEMENTS.length, database.getElements().length);
    }

    @Test(expected = OperationNotSupportedException.class)
    public void testDatabaseConstructorShouldThrowWhenCalledWithMoreThanSixteenElements() throws OperationNotSupportedException {
        Integer[] overElementsSize = new Integer[17];
        database = new Database(overElementsSize);
    }

    @Test(expected = OperationNotSupportedException.class)
    public void testDatabaseConstructorShouldThrowWhenCalledWithZeroElements() throws OperationNotSupportedException {
        Integer[] underElementsSize = new Integer[0];
        database = new Database(underElementsSize);
    }

    @Test(expected = OperationNotSupportedException.class)
    public void when_addNullElement_then_thrownException() throws OperationNotSupportedException {
        database.add(null);
    }

    @Test
    public void testAddShouldAddAtFirstFreeIndex() throws OperationNotSupportedException {
        database.add(20);
        assertEquals(20, database.getElements()[database.getElements().length - 1]);
        assertEquals(6, database.getElements().length);
    }

    @Test
    public void when_removeElement_then_theLastElementIsRemoved() throws OperationNotSupportedException {
        this.database.remove();
        assertEquals(ELEMENTS.length - 1, database.getElements().length);
        assertEquals(4, database.getElements()[database.getElements().length - 1]);
    }

    @Test(expected = OperationNotSupportedException.class)
    public void when_removeAllElements_when_thrownException() throws OperationNotSupportedException {
        database = new Database(1);
        database.remove();
        database.remove();
    }
}
